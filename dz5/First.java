import java.util.concurrent.ThreadLocalRandom;

// Реализовать задание и печать карты для волнового алгоритма

public class First {
    /*
     * 0 - клетка
     * 1 - стена
     * 2 - старт
     * 3 - стоп
     */
    static String[][] maze = new String[][] {
            { "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1" },
            { "1", "2", "0", "0", "0", "0", "0", "0", "1", "0", "1" },
            { "1", "1", "1", "1", "1", "1", "1", "0", "1", "0", "1" },
            { "1", "0", "0", "0", "0", "0", "1", "0", "1", "0", "1" },
            { "1", "0", "1", "1", "1", "0", "1", "0", "1", "0", "1" },
            { "1", "0", "1", "0", "0", "0", "1", "0", "0", "0", "1" },
            { "1", "0", "1", "0", "1", "1", "1", "1", "1", "0", "1" },
            { "1", "0", "1", "0", "0", "0", "0", "0", "1", "0", "1" },
            { "1", "0", "1", "1", "1", "1", "1", "0", "1", "0", "1" },
            { "1", "0", "0", "0", "0", "3", "1", "0", "0", "0", "1" },
            { "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1" },
    };

    public static void main(String[] args) {
        First.vivod(maze);
    }

    public static void vivod(String[][] mas) {
        System.out.println("________________");
        for (int i = 0; i < mas.length; i++) {
            for (int j = 0; j < mas[0].length; j++) {
                System.out.printf("%s ", mas[i][j]);
            }
            System.out.println();
        }
        System.out.println("________________");
    }
}